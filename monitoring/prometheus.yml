# Prometheus Configuration for FinScope Monitoring

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    monitor: 'finscope-monitor'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - alertmanager:9093

# Load rules once and periodically evaluate them
rule_files:
  - "alert_rules.yml"
  - "recording_rules.yml"

# Scrape configurations
scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics

  # FinScope Backend API
  - job_name: 'finscope-backend'
    static_configs:
      - targets: ['backend:8000']
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 10s
    honor_labels: true
    params:
      format: ['prometheus']
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: backend:8000

  # FinScope Frontend (if metrics endpoint available)
  - job_name: 'finscope-frontend'
    static_configs:
      - targets: ['frontend:3000']
    scrape_interval: 30s
    metrics_path: /api/metrics
    scrape_timeout: 10s
    honor_labels: true

  # PostgreSQL Database
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres:5432']
    scrape_interval: 30s
    metrics_path: /metrics
    scrape_timeout: 10s
    # Note: Requires postgres_exporter sidecar

  # Redis Cache
  - job_name: 'redis'
    static_configs:
      - targets: ['redis:6379']
    scrape_interval: 30s
    metrics_path: /metrics
    scrape_timeout: 10s
    # Note: Requires redis_exporter sidecar

  # Nginx Reverse Proxy
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx:8080']
    scrape_interval: 30s
    metrics_path: /nginx_status
    scrape_timeout: 10s
    # Note: Requires nginx-prometheus-exporter or custom metrics

  # Node Exporter (System Metrics)
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s
    metrics_path: /metrics
    scrape_timeout: 10s

  # cAdvisor (Container Metrics)
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s
    metrics_path: /metrics
    scrape_timeout: 10s

  # Docker Daemon Metrics
  - job_name: 'docker'
    static_configs:
      - targets: ['host.docker.internal:9323']
    scrape_interval: 30s
    metrics_path: /metrics
    scrape_timeout: 10s

  # Custom Application Metrics
  - job_name: 'finscope-custom-metrics'
    static_configs:
      - targets: ['backend:8000']
    scrape_interval: 15s
    metrics_path: /api/metrics/custom
    scrape_timeout: 10s
    honor_labels: true
    params:
      format: ['prometheus']

  # Health Check Monitoring
  - job_name: 'finscope-health'
    static_configs:
      - targets: 
        - 'backend:8000'
        - 'frontend:3000'
        - 'nginx:80'
    scrape_interval: 10s
    metrics_path: /health
    scrape_timeout: 5s
    honor_labels: true

  # External API Monitoring (for dependencies)
  - job_name: 'external-apis'
    static_configs:
      - targets:
        - 'api.coingecko.com'
        - 'finnhub.io'
        - 'newsapi.org'
    scrape_interval: 60s
    metrics_path: /
    scrape_timeout: 30s
    # Note: This would require a custom exporter to monitor external APIs

# Remote write configuration (for long-term storage)
# remote_write:
#   - url: "https://prometheus-remote-write-endpoint"
#     basic_auth:
#       username: "username"
#       password: "password"

# Remote read configuration
# remote_read:
#   - url: "https://prometheus-remote-read-endpoint"
#     basic_auth:
#       username: "username"
#       password: "password"

# Storage configuration
storage:
  tsdb:
    path: /prometheus
    retention.time: 30d
    retention.size: 10GB
    wal-compression: true

# Web configuration
web:
  console.libraries: /etc/prometheus/console_libraries
  console.templates: /etc/prometheus/consoles
  enable-lifecycle: true
  enable-admin-api: true
  max-connections: 512
  read-timeout: 30s
  route-prefix: /
  external-url: http://localhost:9090

# Tracing configuration (if using Jaeger)
# tracing:
#   endpoint: "jaeger:14268/api/traces"
#   sampling_fraction: 0.1