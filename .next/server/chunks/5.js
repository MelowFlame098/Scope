exports.id=5,exports.ids=[5],exports.modules={8179:(e,t,r)=>{Promise.resolve().then(r.t.bind(r,3724,23)),Promise.resolve().then(r.t.bind(r,5365,23)),Promise.resolve().then(r.t.bind(r,4900,23)),Promise.resolve().then(r.t.bind(r,4714,23)),Promise.resolve().then(r.t.bind(r,5392,23)),Promise.resolve().then(r.t.bind(r,8898,23))},6129:(e,t,r)=>{Promise.resolve().then(r.bind(r,9033)),Promise.resolve().then(r.bind(r,4385))},9033:(e,t,r)=>{"use strict";r.r(t),r.d(t,{AuthProvider:()=>AuthProvider,useAuth:()=>useAuth});var s=r(784),a=r(9885),i=r(7114),n=r(9795);let SessionService=class SessionService{async createSession(e,t,r={}){let s={...this.defaultOptions,...r},a=`${this.SESSION_PREFIX}${e}`,i=`${this.USER_SESSIONS_PREFIX}${t.userId}`;try{await n.$.setHash(a,{userId:t.userId,username:t.username,email:t.email,role:t.role,permissions:JSON.stringify(t.permissions),loginTime:t.loginTime.toString(),lastActivity:t.lastActivity.toString(),ipAddress:t.ipAddress,userAgent:t.userAgent,deviceId:t.deviceId||""}),await n.$.expire(a,s.maxAge),await n.$.addToSortedSet(i,e,Date.now()),await n.$.expire(i,s.maxAge),await n.$.addToSortedSet(this.ACTIVE_SESSIONS_PREFIX,e,Date.now()),s.maxConcurrentSessions>0&&await this.enforceConcurrentSessionLimit(t.userId,s.maxConcurrentSessions),s.trackActivity&&await this.trackActivity(e,"session_created",{ipAddress:t.ipAddress,userAgent:t.userAgent})}catch(e){throw console.error("Error creating session:",e),Error("Failed to create session")}}async getSession(e){try{let t=`${this.SESSION_PREFIX}${e}`,r=await n.$.getHash(t);if(!r||0===Object.keys(r).length)return null;return{userId:r.userId,username:r.username,email:r.email,role:r.role,permissions:JSON.parse(r.permissions||"[]"),loginTime:parseInt(r.loginTime),lastActivity:parseInt(r.lastActivity),ipAddress:r.ipAddress,userAgent:r.userAgent,deviceId:r.deviceId||void 0}}catch(e){return console.error("Error getting session:",e),null}}async updateActivity(e,t={}){try{let r={...this.defaultOptions,...t},s=`${this.SESSION_PREFIX}${e}`,a=await n.$.exists(s);if(!a)return!1;let i=Date.now();return await n.$.setHashField(s,"lastActivity",i.toString()),r.extendOnActivity&&await n.$.expire(s,r.maxAge),r.trackActivity&&await this.trackActivity(e,"activity_update"),!0}catch(e){return console.error("Error updating session activity:",e),!1}}async destroySession(e){try{let t=`${this.SESSION_PREFIX}${e}`,r=await this.getSession(e);if(!r)return!1;await n.$.delete(t);let s=`${this.USER_SESSIONS_PREFIX}${r.userId}`;return await n.$.removeFromSortedSet(s,e),await n.$.removeFromSortedSet(this.ACTIVE_SESSIONS_PREFIX,e),await this.trackActivity(e,"session_destroyed"),!0}catch(e){return console.error("Error destroying session:",e),!1}}async getUserSessions(e){try{let t=`${this.USER_SESSIONS_PREFIX}${e}`,r=await n.$.getSortedSetRange(t,0,-1),s=[];for(let e of r){let r=`${this.SESSION_PREFIX}${e}`,a=await n.$.exists(r);a?s.push(e):await n.$.removeFromSortedSet(t,e)}return s}catch(e){return console.error("Error getting user sessions:",e),[]}}async destroyUserSessions(e,t){try{let r=await this.getUserSessions(e),s=0;for(let e of r){if(t&&e===t)continue;let r=await this.destroySession(e);r&&s++}return s}catch(e){return console.error("Error destroying user sessions:",e),0}}async getSessionStats(){try{let e=Date.now(),t=e-864e5,r=e-36e5,s=await n.$.getSortedSetCount(this.ACTIVE_SESSIONS_PREFIX),a=await n.$.getSortedSetCountByScore(this.ACTIVE_SESSIONS_PREFIX,t,e),i=await n.$.getSortedSetCountByScore(this.ACTIVE_SESSIONS_PREFIX,r,e);return{totalActiveSessions:s,sessionsLast24h:a,sessionsLastHour:i}}catch(e){return console.error("Error getting session stats:",e),{totalActiveSessions:0,sessionsLast24h:0,sessionsLastHour:0}}}async cleanupExpiredSessions(){try{let e=Date.now(),t=e-1e3*this.defaultOptions.maxAge,r=await n.$.getSortedSetRangeByScore(this.ACTIVE_SESSIONS_PREFIX,0,t),s=0;for(let e of r){let t=`${this.SESSION_PREFIX}${e}`,r=await n.$.exists(t);!r&&(await n.$.removeFromSortedSet(this.ACTIVE_SESSIONS_PREFIX,e),s++)}return s}catch(e){return console.error("Error cleaning up expired sessions:",e),0}}async enforceConcurrentSessionLimit(e,t){try{let r=await this.getUserSessions(e);if(r.length>t){let e=await Promise.all(r.map(async e=>{let t=await this.getSession(e);return{sessionId:e,lastActivity:t?.lastActivity||0}}));e.sort((e,t)=>e.lastActivity-t.lastActivity);let s=e.slice(0,r.length-t);for(let{sessionId:e}of s)await this.destroySession(e)}}catch(e){console.error("Error enforcing concurrent session limit:",e)}}async trackActivity(e,t,r={}){try{let s=`${this.SESSION_ACTIVITY_PREFIX}${e}`,a={type:t,timestamp:Date.now(),...r};await n.$.addToList(s,JSON.stringify(a)),await n.$.trimList(s,0,99),await n.$.expire(s,this.defaultOptions.maxAge)}catch(e){console.error("Error tracking session activity:",e)}}async getSessionActivity(e){try{let t=`${this.SESSION_ACTIVITY_PREFIX}${e}`,r=await n.$.getListRange(t,0,-1);return r.map(e=>{try{return JSON.parse(e)}catch{return{type:"unknown",timestamp:0}}})}catch(e){return console.error("Error getting session activity:",e),[]}}constructor(){this.SESSION_PREFIX="session:",this.USER_SESSIONS_PREFIX="user_sessions:",this.ACTIVE_SESSIONS_PREFIX="active_sessions",this.SESSION_ACTIVITY_PREFIX="session_activity:",this.defaultOptions={maxAge:86400,maxConcurrentSessions:5,extendOnActivity:!0,trackActivity:!0}}};let o=new SessionService,c=(0,a.createContext)(void 0),useAuth=()=>{let e=(0,a.useContext)(c);if(void 0===e)throw Error("useAuth must be used within an AuthProvider");return e},AuthProvider=({children:e})=>{let[t,r]=(0,a.useState)(null),[n,l]=(0,a.useState)(!0),[u,d]=(0,a.useState)(null),h=(0,i.useRouter)(),p=!!t;(0,a.useEffect)(()=>{},[]);let checkAuthStatus=async()=>{try{let e=await fetch("/api/auth/me",{method:"GET",credentials:"include",headers:{"Content-Type":"application/json"}});if(e.ok){let t=await e.json();if(t.success&&t.data){let e={...t.data,subscriptionPlan:t.data.subscription_plan?.toLowerCase()||"free"};r(e)}else r(null)}else r(null),localStorage.removeItem("access_token"),localStorage.removeItem("refresh_token")}catch(e){console.error("Auth check failed:",e),r(null),localStorage.removeItem("access_token"),localStorage.removeItem("refresh_token")}finally{l(!1)}},login=async(e,r,s,a)=>{try{let i=await fetch("/api/auth/login",{method:"POST",credentials:"include",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:e,password:r,captcha_token:s,remember_me:a})}),n=await i.json();if(!i.ok)return{success:!1,error:n.error||"Login failed",requiresCaptcha:n.requires_captcha};if(await checkAuthStatus(),t){let e=`session_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,r={userId:t.id,username:t.email,email:t.email,role:t.role||"user",permissions:[],loginTime:Date.now(),lastActivity:Date.now(),userAgent:navigator.userAgent,ipAddress:"client-side"};await o.createSession(e,r),d(e)}return{success:!0}}catch(e){return console.error("Login error:",e),{success:!1,error:"Network error. Please try again."}}},register=async e=>{try{let t=e.captcha?.split(":")||[],r=t[0]||"",s=t[1]||"",a=await fetch("/api/auth/register",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:e.email,password:e.password,first_name:e.firstName,last_name:e.lastName,captcha_id:r,captcha_answer:s,acceptTerms:e.acceptTerms,acceptPrivacy:e.acceptPrivacy,marketingEmails:e.marketingEmails})}),i=await a.json();if(!a.ok)return{success:!1,error:i.detail||"Registration failed"};{let t=await login(e.email,e.password);if(t.success)return{success:!0};return{success:!0,message:"Registration successful. Please log in manually."}}}catch(e){return console.error("Registration error:",e),{success:!1,error:"Network error. Please try again."}}},logout=async e=>{try{if(u){if(e&&t){let e=await o.getUserSessions(t.id);await Promise.all(e.map(e=>o.destroySession(e)))}else await o.destroySession(u);d(null)}await fetch("/api/auth/logout",{method:"POST",credentials:"include"})}catch(e){console.error("Logout API error:",e)}localStorage.removeItem("access_token"),localStorage.removeItem("refresh_token"),r(null),h.push("/landing")},refreshToken=async()=>{try{let e=await fetch("/api/auth/refresh",{method:"POST",credentials:"include",headers:{"Content-Type":"application/json"}});if(e.ok)return await checkAuthStatus(),!0;return r(null),localStorage.removeItem("access_token"),localStorage.removeItem("refresh_token"),!1}catch(e){return console.error("Token refresh error:",e),r(null),!1}},resendVerificationEmail=async()=>{try{let e=await fetch("/api/auth/resend-verification",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${localStorage.getItem("access_token")}`}}),t=await e.json();if(e.ok)return{success:!0};return{success:!1,error:t.detail||"Failed to resend verification email"}}catch(e){return console.error("Resend verification error:",e),{success:!1,error:"Network error. Please try again."}}},forgotPassword=async(e,t)=>{try{let r=await fetch("/api/auth/password-reset",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:e,captcha_token:t})}),s=await r.json();if(r.ok)return{success:!0};return{success:!1,error:s.detail||"Failed to send reset email",requiresCaptcha:s.requires_captcha}}catch(e){return console.error("Forgot password error:",e),{success:!1,error:"Network error. Please try again."}}},resetPassword=async(e,t)=>{try{let r=await fetch("/api/auth/reset-password-confirm",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({token:e,new_password:t})}),s=await r.json();if(r.ok)return{success:!0};return{success:!1,error:s.detail||"Failed to reset password"}}catch(e){return console.error("Reset password error:",e),{success:!1,error:"Network error. Please try again."}}},verifyEmail=async e=>{try{let s=await fetch("/api/auth/verify-email",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({token:e})}),a=await s.json();if(s.ok)return t&&r({...t,isEmailVerified:!0}),{success:!0};return{success:!1,error:a.detail||"Email verification failed"}}catch(e){return console.error("Email verification error:",e),{success:!1,error:"Network error. Please try again."}}},isFeatureAvailableForFree=e=>["basic_market_data","portfolio_tracking","basic_charts"].includes(e),isFeatureAvailableForBasic=e=>["real_time_data","advanced_charts","price_alerts","technical_indicators"].includes(e),getSubscriptionLimits=()=>{if(!t)return{maxPortfolios:1,maxWatchlists:1,advancedAnalytics:!1,aiInsights:!1,socialTrading:!1,institutionalTools:!1,prioritySupport:!1};switch(t.subscriptionPlan){case"free":return{maxPortfolios:1,maxWatchlists:3,advancedAnalytics:!1,aiInsights:!1,socialTrading:!1,institutionalTools:!1,prioritySupport:!1};case"basic":return{maxPortfolios:5,maxWatchlists:10,advancedAnalytics:!0,aiInsights:!1,socialTrading:!0,institutionalTools:!1,prioritySupport:!1};case"premium":return{maxPortfolios:-1,maxWatchlists:-1,advancedAnalytics:!0,aiInsights:!0,socialTrading:!0,institutionalTools:!0,prioritySupport:!0};default:return getSubscriptionLimits()}},refreshSubscription=async()=>{if(t)try{let e=localStorage.getItem("access_token"),s=await fetch("/api/auth/subscription",{headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"}});if(s.ok){let e=await s.json();r({...t,subscriptionPlan:e.plan,subscriptionStatus:e.status,trialEndsAt:e.trial_ends_at,subscriptionEndsAt:e.subscription_ends_at})}}catch(e){console.error("Failed to refresh subscription:",e)}},getActiveSessions=async()=>{if(!t)return[];try{return await o.getUserSessions(t.id)}catch(e){return console.error("Failed to get active sessions:",e),[]}},terminateSession=async e=>{try{return await o.destroySession(e),!0}catch(e){return console.error("Failed to terminate session:",e),!1}},refreshSession=async()=>{if(!u)return!1;try{return await o.updateActivity(u),!0}catch(e){return console.error("Failed to refresh session:",e),!1}};return s.jsx(c.Provider,{value:{user:t,isLoading:n,isAuthenticated:p,sessionId:u,login,register,logout,refreshToken,updateUser:e=>{t&&r({...t,...e})},resendVerificationEmail,forgotPassword,resetPassword,verifyEmail,hasFeatureAccess:e=>{if(!t)return!1;let r=t.subscriptionPlan,s=t.subscriptionStatus;if("expired"===s||"cancelled"===s)return"free"===r&&isFeatureAvailableForFree(e);switch(r){case"free":return isFeatureAvailableForFree(e);case"basic":return isFeatureAvailableForFree(e)||isFeatureAvailableForBasic(e);case"premium":return!0;default:return!1}},checkSubscriptionAccess:e=>{if(!t)return!1;let r={free:0,basic:1,premium:2},s=r[t.subscriptionPlan],a=r[e];return"expired"===t.subscriptionStatus||"cancelled"===t.subscriptionStatus?"free"===t.subscriptionPlan&&"free"===e:s>=a},getSubscriptionLimits,refreshSubscription,getActiveSessions,terminateSession,refreshSession},children:e})}},4385:(e,t,r)=>{"use strict";r.r(t),r.d(t,{SubscriptionProvider:()=>SubscriptionProvider,default:()=>c,useSubscription:()=>useSubscription});var s=r(784),a=r(9885),i=r(1145);let n=(0,a.createContext)(void 0),o="http://localhost:8000",SubscriptionProvider=({children:e})=>{let[t,r]=(0,a.useState)(null),[c,l]=(0,a.useState)([]),[u,d]=(0,a.useState)(null),[h,p]=(0,a.useState)(!1),[g,S]=(0,a.useState)(null),getAuthHeaders=()=>{let e=localStorage.getItem("token");return e?{Authorization:`Bearer ${e}`}:{}},fetchPlans=async(e=0)=>{try{p(!0),S(null);let e=await i.Z.get(`${o}/subscription/plans`);l(e.data.plans)}catch(t){if(("ERR_NETWORK"===t.code||"ERR_CONNECTION_REFUSED"===t.code)&&e<3){console.log(`Retrying fetchPlans (attempt ${e+1}/3)...`),setTimeout(()=>fetchPlans(e+1),2e3);return}S(t.response?.data?.detail||"Failed to fetch plans"),console.error("Error fetching plans:",t)}finally{p(!1)}},fetchCurrentSubscription=async(e=0)=>{try{p(!0),S(null);let e=await i.Z.get(`${o}/subscription/current`,{headers:getAuthHeaders()});r(e.data.subscription),d(e.data.features)}catch(t){if(("ERR_NETWORK"===t.code||"ERR_CONNECTION_REFUSED"===t.code)&&e<3){console.log(`Retrying fetchCurrentSubscription (attempt ${e+1}/3)...`),setTimeout(()=>fetchCurrentSubscription(e+1),2e3);return}t.response?.status!==401&&S(t.response?.data?.detail||"Failed to fetch subscription"),console.error("Error fetching subscription:",t)}finally{p(!1)}},subscribeToPlan=async(e,t=!1)=>{try{p(!0),S(null);let s=await i.Z.post(`${o}/subscription/subscribe`,{plan:e,trial:t},{headers:getAuthHeaders()});return r(s.data.subscription),d(s.data.features),!0}catch(e){return S(e.response?.data?.detail||"Failed to subscribe"),console.error("Error subscribing:",e),!1}finally{p(!1)}},cancelSubscription=async()=>{try{return p(!0),S(null),await i.Z.post(`${o}/subscription/cancel`,{},{headers:getAuthHeaders()}),await fetchCurrentSubscription(),!0}catch(e){return S(e.response?.data?.detail||"Failed to cancel subscription"),console.error("Error canceling subscription:",e),!1}finally{p(!1)}},checkFeatureAccess=async e=>{try{let t=await i.Z.get(`${o}/subscription/check-access/${e}`,{headers:getAuthHeaders()});return t.data.has_access}catch(e){return console.error("Error checking feature access:",e),!1}};return(0,a.useEffect)(()=>{},[]),s.jsx(n.Provider,{value:{subscription:t,plans:c,features:u,isLoading:h,error:g,fetchPlans,fetchCurrentSubscription,subscribeToPlan,cancelSubscription,checkFeatureAccess,hasFeatureAccess:e=>{if(!u)return!1;switch(e){case"advanced_analytics":return u.advanced_analytics;case"ai_insights":return u.ai_insights;case"social_trading":return u.social_trading;case"institutional_tools":return u.institutional_tools;case"priority_support":return u.priority_support;default:return!1}}},children:e})},useSubscription=()=>{let e=(0,a.useContext)(n);if(void 0===e)throw Error("useSubscription must be used within a SubscriptionProvider");return e},c=n},9795:(e,t,r)=>{"use strict";r.d(t,{$:()=>s});let SimpleEventEmitter=class SimpleEventEmitter{on(e,t){this.events.has(e)||this.events.set(e,[]),this.events.get(e).push(t)}emit(e,...t){let r=this.events.get(e);r&&r.forEach(e=>e(...t))}removeListener(e,t){let r=this.events.get(e);if(r){let e=r.indexOf(t);e>-1&&r.splice(e,1)}}constructor(){this.events=new Map}};let MockRedisClient=class MockRedisClient extends SimpleEventEmitter{async get(e){return this.data.get(e)||null}async set(e,t,r){return this.data.set(e,t),r?.EX&&setTimeout(()=>this.data.delete(e),1e3*r.EX),r?.PX&&setTimeout(()=>this.data.delete(e),r.PX),"OK"}async del(e){let t=this.data.has(e);return this.data.delete(e),this.hashes.delete(e),this.lists.delete(e),this.sortedSets.delete(e),t?1:0}async exists(e){return this.data.has(e)?1:0}async expire(e,t){return this.data.has(e)?(setTimeout(()=>this.data.delete(e),1e3*t),1):0}async hget(e,t){let r=this.hashes.get(e);return r?.get(t)||null}async hset(e,t,r){this.hashes.has(e)||this.hashes.set(e,new Map);let s=this.hashes.get(e),a=!s.has(t);return s.set(t,r),a?1:0}async hgetall(e){let t=this.hashes.get(e);return t?Object.fromEntries(t.entries()):{}}async hdel(e,t){let r=this.hashes.get(e);return r&&r.has(t)?(r.delete(t),1):0}async lpush(e,t){this.lists.has(e)||this.lists.set(e,[]);let r=this.lists.get(e);return r.unshift(t),r.length}async rpush(e,t){this.lists.has(e)||this.lists.set(e,[]);let r=this.lists.get(e);return r.push(t),r.length}async lpop(e){let t=this.lists.get(e);return t?.shift()||null}async rpop(e){let t=this.lists.get(e);return t?.pop()||null}async lrange(e,t,r){let s=this.lists.get(e)||[];return s.slice(t,-1===r?void 0:r+1)}async zadd(e,t,r){this.sortedSets.has(e)||this.sortedSets.set(e,new Map);let s=this.sortedSets.get(e),a=!s.has(r);return s.set(r,t),a?1:0}async zrange(e,t,r,s){let a=this.sortedSets.get(e);if(!a)return[];let i=Array.from(a.entries()).sort((e,t)=>e[1]-t[1]),n=i.slice(t,-1===r?void 0:r+1);return s?.WITHSCORES?n.flatMap(([e,t])=>[e,t.toString()]):n.map(([e])=>e)}async zrevrange(e,t,r,s){let a=this.sortedSets.get(e);if(!a)return[];let i=Array.from(a.entries()).sort((e,t)=>t[1]-e[1]),n=i.slice(t,-1===r?void 0:r+1);return s?.WITHSCORES?n.flatMap(([e,t])=>[e,t.toString()]):n.map(([e])=>e)}async zrem(e,t){let r=this.sortedSets.get(e);return r&&r.has(t)?(r.delete(t),1):0}async publish(e,t){let r=this.subscribers.get(e);return r?(r.forEach(e=>e(t)),r.size):0}async subscribe(e){console.log(`Subscribed to channel: ${e}`)}async unsubscribe(e){this.subscribers.delete(e),console.log(`Unsubscribed from channel: ${e}`)}async disconnect(){this.data.clear(),this.hashes.clear(),this.lists.clear(),this.sortedSets.clear(),this.subscribers.clear()}constructor(...e){super(...e),this.data=new Map,this.hashes=new Map,this.lists=new Map,this.sortedSets=new Map,this.subscribers=new Map}};let RedisService=class RedisService extends SimpleEventEmitter{constructor(e={}){super(),this.isConnected=!1,this.config={defaultTTL:3600,maxRetries:3,retryDelay:1e3,...e},this.client=new MockRedisClient,this.isConnected=!0}async connect(){try{this.isConnected=!0,this.emit("connected"),console.log("Redis service connected (mock mode)")}catch(e){throw this.emit("error",e),e}}async disconnect(){this.client&&(await this.client.disconnect(),this.isConnected=!1,this.emit("disconnected"))}async get(e){try{let t=await this.client.get(e);return t?JSON.parse(t):null}catch(t){return console.error(`Redis GET error for key ${e}:`,t),null}}async set(e,t,r){try{let s=JSON.stringify(t),a=r?{EX:r}:{EX:this.config.defaultTTL};return await this.client.set(e,s,a),!0}catch(t){return console.error(`Redis SET error for key ${e}:`,t),!1}}async del(e){try{let t=await this.client.del(e);return t>0}catch(t){return console.error(`Redis DEL error for key ${e}:`,t),!1}}async exists(e){try{let t=await this.client.exists(e);return t>0}catch(t){return console.error(`Redis EXISTS error for key ${e}:`,t),!1}}async hget(e,t){try{let r=await this.client.hget(e,t);return r?JSON.parse(r):null}catch(r){return console.error(`Redis HGET error for key ${e}, field ${t}:`,r),null}}async hset(e,t,r){try{let s=JSON.stringify(r);return await this.client.hset(e,t,s),!0}catch(r){return console.error(`Redis HSET error for key ${e}, field ${t}:`,r),!1}}async hgetall(e){try{let t=await this.client.hgetall(e),r={};for(let[e,s]of Object.entries(t))try{r[e]=JSON.parse(s)}catch{r[e]=s}return r}catch(t){return console.error(`Redis HGETALL error for key ${e}:`,t),{}}}async hdel(e,t){try{return await this.client.hdel(e,t)}catch(r){return console.error(`Redis HDEL error for key ${e}, field ${t}:`,r),0}}async lpush(e,t){try{let r=JSON.stringify(t);return await this.client.lpush(e,r)}catch(t){return console.error(`Redis LPUSH error for key ${e}:`,t),0}}async rpop(e){try{let t=await this.client.rpop(e);return t?JSON.parse(t):null}catch(t){return console.error(`Redis RPOP error for key ${e}:`,t),null}}async lrange(e,t=0,r=-1){try{let s=await this.client.lrange(e,t,r);return s.map(e=>{try{return JSON.parse(e)}catch{return e}})}catch(t){return console.error(`Redis LRANGE error for key ${e}:`,t),[]}}async zadd(e,t,r){try{let s=await this.client.zadd(e,t,r);return s>0}catch(t){return console.error(`Redis ZADD error for key ${e}:`,t),!1}}async zrevrange(e,t=0,r=-1,s=!1){try{return await this.client.zrevrange(e,t,r,{WITHSCORES:s})}catch(t){return console.error(`Redis ZREVRANGE error for key ${e}:`,t),[]}}async publish(e,t){try{let r="string"==typeof t?t:JSON.stringify(t);return await this.client.publish(e,r)}catch(t){return console.error(`Redis PUBLISH error for channel ${e}:`,t),0}}async subscribe(e,t){try{await this.client.subscribe(e),this.client.on("message",(r,s)=>{if(r===e)try{let e=JSON.parse(s);t(e)}catch{t(s)}})}catch(t){console.error(`Redis SUBSCRIBE error for channel ${e}:`,t)}}async cacheMarketData(e,t,r=60){await this.set(`market:${e}`,t,r)}async getMarketData(e){return await this.get(`market:${e}`)}async cacheNews(e,t,r=1800){await this.set(`news:${e}`,t,r)}async getNews(e){return await this.get(`news:${e}`)}async cacheUserSession(e,t,r=86400){await this.hset(`session:${e}`,"data",t),await this.client.expire(`session:${e}`,r)}async getUserSession(e){return await this.hget(`session:${e}`,"data")}async addTradeOrder(e){await this.lpush("trade:orders",e)}async getNextTradeOrder(){return await this.rpop("trade:orders")}async updateLeaderboard(e,t,r="trading"){await this.zadd(`leaderboard:${r}`,t,e)}async getLeaderboard(e="trading",t=10){return await this.zrevrange(`leaderboard:${e}`,0,t-1,!0)}async updateTradingPerformance(e,t){let r=Date.now();await Promise.all([this.zadd("leaderboard:return",t.totalReturn,e),this.zadd("leaderboard:winrate",t.winRate,e),this.zadd("leaderboard:sharpe",t.sharpeRatio,e),this.zadd("leaderboard:trades",t.totalTrades,e),this.zadd("leaderboard:followers",t.followers,e),this.zadd("leaderboard:aum",t.aum,e),this.hset(`user:${e}:metrics`,{totalReturn:t.totalReturn.toString(),winRate:t.winRate.toString(),sharpeRatio:t.sharpeRatio.toString(),totalTrades:t.totalTrades.toString(),followers:t.followers.toString(),aum:t.aum.toString(),lastUpdated:r.toString()})])}async getTopTraders(e="return",t=10){try{let r=await this.zrevrange(`leaderboard:${e}`,0,t-1,!0),s=[];for(let e=0;e<r.length;e+=2){let t=r[e],a=parseFloat(r[e+1]),i=await this.hgetall(`user:${t}:metrics`);s.push({userId:t,score:a,rank:Math.floor(e/2)+1,metrics:i?{totalReturn:parseFloat(i.totalReturn||"0"),winRate:parseFloat(i.winRate||"0"),sharpeRatio:parseFloat(i.sharpeRatio||"0"),totalTrades:parseInt(i.totalTrades||"0"),followers:parseInt(i.followers||"0"),aum:parseFloat(i.aum||"0"),lastUpdated:parseInt(i.lastUpdated||"0")}:null})}return s}catch(e){return console.error("Error getting top traders:",e),[]}}async getUserRank(e,t="return"){try{let r=await this.client.zrevrank(`leaderboard:${t}`,e);return null!==r?r+1:null}catch(e){return console.error("Error getting user rank:",e),null}}async updatePeriodLeaderboard(e,t,r,s){let a=new Date,i="";switch(s){case"daily":i=`${a.getFullYear()}-${String(a.getMonth()+1).padStart(2,"0")}-${String(a.getDate()).padStart(2,"0")}`;break;case"weekly":let n=new Date(a.setDate(a.getDate()-a.getDay()));i=`${n.getFullYear()}-W${Math.ceil(n.getDate()/7)}`;break;case"monthly":i=`${a.getFullYear()}-${String(a.getMonth()+1).padStart(2,"0")}`}await this.zadd(`leaderboard:${r}:${s}:${i}`,t,e);let o="daily"===s?604800:"weekly"===s?2592e3:31536e3;await this.client.expire(`leaderboard:${r}:${s}:${i}`,o)}async getPeriodLeaderboard(e,t,r=10){let s=new Date,a="";switch(t){case"daily":a=`${s.getFullYear()}-${String(s.getMonth()+1).padStart(2,"0")}-${String(s.getDate()).padStart(2,"0")}`;break;case"weekly":let i=new Date(s.setDate(s.getDate()-s.getDay()));a=`${i.getFullYear()}-W${Math.ceil(i.getDate()/7)}`;break;case"monthly":a=`${s.getFullYear()}-${String(s.getMonth()+1).padStart(2,"0")}`}try{let s=await this.zrevrange(`leaderboard:${e}:${t}:${a}`,0,r-1,!0),i=[];for(let e=0;e<s.length;e+=2){let t=s[e],r=parseFloat(s[e+1]);i.push({userId:t,score:r,rank:Math.floor(e/2)+1})}return i}catch(e){return console.error("Error getting period leaderboard:",e),[]}}async addPaperTradingOrder(e){try{await this.lpush("paper_trading_orders",e)}catch(e){throw console.error("Error adding paper trading order:",e),e}}async getNextPaperTradingOrder(){try{return await this.rpop("paper_trading_orders")}catch(e){return console.error("Error getting next paper trading order:",e),null}}async subscribeToOrderUpdates(e){try{await this.subscribe("order_updates",e)}catch(e){throw console.error("Error subscribing to order updates:",e),e}}async publishOrderUpdate(e){try{await this.publish("order_updates",e)}catch(e){throw console.error("Error publishing order update:",e),e}}async cacheQueueStats(e){try{await this.hset("queue_stats","pending",e.pending.toString()),await this.hset("queue_stats","processing",e.processing.toString()),await this.hset("queue_stats","completed",e.completed.toString())}catch(e){throw console.error("Error caching queue stats:",e),e}}async getQueueStats(){try{let e=await this.hgetall("queue_stats");return{pending:parseInt(e.pending||"0"),processing:parseInt(e.processing||"0"),completed:parseInt(e.completed||"0")}}catch(e){return console.error("Error getting queue stats:",e),{pending:0,processing:0,completed:0}}}isHealthy(){return this.isConnected}};let s=new RedisService},1832:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>RootLayout,metadata:()=>y,viewport:()=>S});var s=r(4656),a=r(186),i=r.n(a),n=r(5153);let o=(0,n.createProxy)(String.raw`C:\Users\yarag\OneDrive\Documents\personal work\Scope- Trading Platform\src\contexts\AuthContext.tsx`),{__esModule:c,$$typeof:l}=o;o.default,(0,n.createProxy)(String.raw`C:\Users\yarag\OneDrive\Documents\personal work\Scope- Trading Platform\src\contexts\AuthContext.tsx#useAuth`);let u=(0,n.createProxy)(String.raw`C:\Users\yarag\OneDrive\Documents\personal work\Scope- Trading Platform\src\contexts\AuthContext.tsx#AuthProvider`),d=(0,n.createProxy)(String.raw`C:\Users\yarag\OneDrive\Documents\personal work\Scope- Trading Platform\src\contexts\SubscriptionContext.tsx`),{__esModule:h,$$typeof:p}=d;d.default;let g=(0,n.createProxy)(String.raw`C:\Users\yarag\OneDrive\Documents\personal work\Scope- Trading Platform\src\contexts\SubscriptionContext.tsx#SubscriptionProvider`);(0,n.createProxy)(String.raw`C:\Users\yarag\OneDrive\Documents\personal work\Scope- Trading Platform\src\contexts\SubscriptionContext.tsx#useSubscription`),r(5023);let S={width:"device-width",initialScale:1,themeColor:"#1f2937"},y={title:"FinScope - Advanced Financial Analytics & Trading Platform",description:"Professional-grade financial analytics, portfolio management, and algorithmic trading platform with real-time market data and AI-powered insights.",keywords:["financial analytics","trading platform","portfolio management","algorithmic trading","market data","investment tools","financial technology","fintech"],authors:[{name:"FinScope Team"}],robots:"index, follow",openGraph:{title:"FinScope - Advanced Financial Analytics & Trading Platform",description:"Professional-grade financial analytics, portfolio management, and algorithmic trading platform with real-time market data and AI-powered insights.",type:"website",locale:"en_US"},twitter:{card:"summary_large_image",title:"FinScope - Advanced Financial Analytics & Trading Platform",description:"Professional-grade financial analytics, portfolio management, and algorithmic trading platform with real-time market data and AI-powered insights."},icons:{icon:"/favicon.ico",apple:"/apple-touch-icon.png"}};function RootLayout({children:e}){return s.jsx("html",{lang:"en",className:"dark",children:s.jsx("body",{className:i().className,children:s.jsx(u,{children:s.jsx(g,{children:e})})})})}},5023:()=>{}};